parameters:
  monsieurbiz_search_elasticsearch_host: '%env(default::MONSIEURBIZ_SEARCHPLUGIN_ES_HOST)%'
  monsieurbiz_search_elasticsearch_port: '%env(default::MONSIEURBIZ_SEARCHPLUGIN_ES_PORT)%'
  monsieurbiz_search_elasticsearch_fallback_url: 'http://%monsieurbiz_search_elasticsearch_host%:%monsieurbiz_search_elasticsearch_port%/'
  monsieurbiz_search_elasticsearch_url: '%env(default:monsieurbiz_search_elasticsearch_fallback_url:MONSIEURBIZ_SEARCHPLUGIN_ES_URL)%'
  monsieurbiz.search.model.documentable.interface: MonsieurBiz\SyliusSearchPlugin\Model\Documentable\DocumentableInterface
  monsieurbiz.search.request.interface: MonsieurBiz\SyliusSearchPlugin\Search\Request\RequestInterface
  monsieurbiz.search.product_attribute_analyzer: 'search_standard'
  monsieurbiz.search.product.enable_stock_filter: false
  monsieurbiz.search.product.is_in_stock_scoring_boost: 0 # The value is used to multiply the document score (0 to disable the scoring boost)
  monsieurbiz.search.product.apply_is_in_stock_scoring_boost_on:
      - !php/const MonsieurBiz\SyliusSearchPlugin\Search\Request\RequestInterface::SEARCH_TYPE
      - !php/const MonsieurBiz\SyliusSearchPlugin\Search\Request\RequestInterface::TAXON_TYPE
      - !php/const MonsieurBiz\SyliusSearchPlugin\Search\Request\RequestInterface::INSTANT_TYPE
  monsieurbiz.search.product.search.fields_to_search: 
      - 'name^5'
      - 'description'
  monsieurbiz.search.product.search.nested_fields_to_search: []
  monsieurbiz.search.product.instant.fields_to_search: 
      - 'name^5'
      - 'name.autocomplete'
      - 'description'
  monsieurbiz.search.product.instant.nested_fields_to_search: []

services:

  _defaults:
    autowire: true
    autoconfigure: true
    public: false
    bind:
      Sylius\Bundle\ResourceBundle\Controller\ParametersParserInterface: '@sylius.resource_controller.parameters_parser'
      $localeProvider: '@sylius.translation_locale_provider'
      $productVariantResolver: '@MonsieurBiz\SyliusSearchPlugin\Resolver\CheapestProductVariantResolver'
      $documentableRegistry: '@monsieurbiz.search.registry.documentable'
      $enableStockFilter: '%monsieurbiz.search.product.enable_stock_filter%'

  _instanceof:
    MonsieurBiz\SyliusSearchPlugin\AutoMapper\ProductAttributeValueReader\ReaderInterface:
      tags: [ 'monsieurbiz.search.automapper.product_attribute_value_reader' ]
    MonsieurBiz\SyliusSearchPlugin\Fixture\SearchableFixtureInterface:
      tags: ['sylius_fixtures.fixture']

  MonsieurBiz\SyliusSearchPlugin\:
    resource: '../../*'
    exclude: '../../{Entity,Migrations,Tests,Kernel.php}'

  MonsieurBiz\SyliusSearchPlugin\Form\Extension\:
    resource: '../../Form/Extension'
    tags:
      - { name: form.type_extension }

  MonsieurBiz\SyliusSearchPlugin\Generated\:
    resource: '../../../generated'

  # Do not autoconfigure requests
  MonsieurBiz\SyliusSearchPlugin\Search\Request\InstantSearch:
    autoconfigure: false

  MonsieurBiz\SyliusSearchPlugin\Search\Request\Search:
    autoconfigure: false

  MonsieurBiz\SyliusSearchPlugin\Search\Request\Taxon:
    autoconfigure: false

  # ES Client configuration
  MonsieurBiz\SyliusSearchPlugin\Search\ClientFactory:
    arguments:
      $config:
        url: '%monsieurbiz_search_elasticsearch_url%'

  MonsieurBiz\SyliusSearchPlugin\Repository\ProductAttributeRepository:
    arguments:
      $attributeRepository: '@sylius.repository.product_attribute'

  # Define our mapping provider
  MonsieurBiz\SyliusSearchPlugin\Mapping\YamlWithLocaleProvider:
    arguments:
      $fileLocator: '@file_locator'
      $configurationDirectories: '%monsieurbiz.search.config.elastically_configuration_paths%'

  # Automapper configuration
  MonsieurBiz\SyliusSearchPlugin\AutoMapper\Configuration:
    arguments:
      $automapperClasses: '%monsieurbiz.search.config.automapper_classes%'

  # Defines our registries
  monsieurbiz.search.registry.documentable:
    class: Sylius\Component\Registry\ServiceRegistry
    arguments:
      $className: '%monsieurbiz.search.model.documentable.interface%'
      $context: 'documentable'

  # Search request handler
  MonsieurBiz\SyliusSearchPlugin\Search\Request\RequestHandler:
    arguments:
      $searchRequests: !tagged_iterator { tag: 'monsieurbiz.search.request' }

  # Define product attribute value readers
  MonsieurBiz\SyliusSearchPlugin\AutoMapper\ProductAttributeValueConfiguration:
    arguments:
      $productAttributeValueReaders: !tagged_iterator { tag: 'monsieurbiz.search.automapper.product_attribute_value_reader', default_index_method: 'getReaderCode' }

  #
  MonsieurBiz\SyliusSearchPlugin\EventSubscriber\AppendProductAttributeMappingSubscriber:
    arguments:
      $fieldAnalyzer: '%monsieurbiz.search.product_attribute_analyzer%'

  # Define aggregation builders
  MonsieurBiz\SyliusSearchPlugin\Search\Request\Aggregation\MainTaxonAggregation:
    tags: { name: 'monsieurbiz.search.aggregation_builder' }

  MonsieurBiz\SyliusSearchPlugin\Search\Request\Aggregation\TaxonsAggregation:
    tags: { name: 'monsieurbiz.search.aggregation_builder' }

  MonsieurBiz\SyliusSearchPlugin\Search\Request\Aggregation\PriceAggregation:
    tags: { name: 'monsieurbiz.search.aggregation_builder' }

  MonsieurBiz\SyliusSearchPlugin\Search\Request\Aggregation\ProductAttributesAggregation:
    tags: { name: 'monsieurbiz.search.aggregation_builder' }

  MonsieurBiz\SyliusSearchPlugin\Search\Request\Aggregation\ProductOptionsAggregation:
    tags: { name: 'monsieurbiz.search.aggregation_builder' }

  MonsieurBiz\SyliusSearchPlugin\Search\Request\AggregationBuilder:
    arguments: [ !tagged_iterator { tag: 'monsieurbiz.search.aggregation_builder' } ]

  # Define query filters
  monsieurbiz.search.request.query_filter.product_search.search_term_filter:
    class: MonsieurBiz\SyliusSearchPlugin\Search\Request\QueryFilter\Product\SearchTermFilter
    arguments:
      $fieldsToSearch: '%monsieurbiz.search.product.search.fields_to_search%'
      $nestedFieldsToSearch: '%monsieurbiz.search.product.search.nested_fields_to_search%'
    tags:
      - { name: monsieurbiz.search.request.product_search_filter }

  monsieurbiz.search.request.query_filter.product_instant_search.search_term_filter:
    class: MonsieurBiz\SyliusSearchPlugin\Search\Request\QueryFilter\Product\SearchTermFilter
    arguments:
      $fieldsToSearch: '%monsieurbiz.search.product.instant.fields_to_search%'
      $nestedFieldsToSearch: '%monsieurbiz.search.product.instant.nested_fields_to_search%'
    tags:
      - { name: monsieurbiz.search.request.product_instant_search_filter }

  MonsieurBiz\SyliusSearchPlugin\Search\Request\QueryFilter\ChannelFilter:
    tags:
      - { name: monsieurbiz.search.request.product_search_filter }
      - { name: monsieurbiz.search.request.product_instant_search_filter }
      - { name: monsieurbiz.search.request.product_taxon_filter }

  MonsieurBiz\SyliusSearchPlugin\Search\Request\QueryFilter\EnabledFilter:
    tags:
      - { name: monsieurbiz.search.request.product_search_filter }
      - { name: monsieurbiz.search.request.product_instant_search_filter }
      - { name: monsieurbiz.search.request.product_taxon_filter }

  MonsieurBiz\SyliusSearchPlugin\Search\Request\QueryFilter\Product\IsInStockFilter:
    tags:
      - { name: monsieurbiz.search.request.product_search_filter }
      - { name: monsieurbiz.search.request.product_instant_search_filter }
      - { name: monsieurbiz.search.request.product_taxon_filter }

  MonsieurBiz\SyliusSearchPlugin\Search\Request\QueryFilter\Product\TaxonFilter:
    tags:
      - { name: monsieurbiz.search.request.product_taxon_filter }

  # Define post filters
  MonsieurBiz\SyliusSearchPlugin\Search\Request\PostFilter\Product\AttributesPostFilter:
    tags:
      - { name: monsieurbiz.search.request.product_post_filter }

  MonsieurBiz\SyliusSearchPlugin\Search\Request\PostFilter\Product\MainTaxonPostFilter:
    tags:
      - { name: monsieurbiz.search.request.product_post_filter }

  MonsieurBiz\SyliusSearchPlugin\Search\Request\PostFilter\Product\OptionsPostFilter:
    tags:
      - { name: monsieurbiz.search.request.product_post_filter }

  MonsieurBiz\SyliusSearchPlugin\Search\Request\PostFilter\Product\PricePostFilter:
    tags:
      - { name: monsieurbiz.search.request.product_post_filter }

  MonsieurBiz\SyliusSearchPlugin\Search\Request\PostFilter\Product\ProductTaxonPostFilter:
    tags:
      - { name: monsieurbiz.search.request.product_post_filter }

  # Define sorters
  MonsieurBiz\SyliusSearchPlugin\Search\Request\Sorting\Product\PositionSorter:
    tags:
      - { name: monsieurbiz.search.request.product_sorter }

  MonsieurBiz\SyliusSearchPlugin\Search\Request\Sorting\Product\PriceSorter:
    tags:
      - { name: monsieurbiz.search.request.product_sorter }

  MonsieurBiz\SyliusSearchPlugin\Search\Request\Sorting\Product\NameSorter:
    tags:
      - { name: monsieurbiz.search.request.product_sorter }

  MonsieurBiz\SyliusSearchPlugin\Search\Request\Sorting\Product\CreatedAtSorter:
    tags:
      - { name: monsieurbiz.search.request.product_sorter }

  # Functions score
  MonsieurBiz\SyliusSearchPlugin\Search\Request\FunctionScore\Product\InStockWeightFunction:
    arguments:
      $inStockWeight: '%monsieurbiz.search.product.is_in_stock_scoring_boost%'
      $applyOnRequestTypes: '%monsieurbiz.search.product.apply_is_in_stock_scoring_boost_on%'
    tags:
      - { name: monsieurbiz.search.request.product_function_score }

  # Define the product queries
  MonsieurBiz\SyliusSearchPlugin\Search\Request\ProductRequest\Search:
    arguments:
      $documentType: monsieurbiz_product
      $queryFilters: !tagged_iterator { tag: 'monsieurbiz.search.request.product_search_filter' }
      $postFilters: !tagged_iterator { tag: 'monsieurbiz.search.request.product_post_filter' }
      $sorters: !tagged_iterator { tag: 'monsieurbiz.search.request.product_sorter' }
      $functionScores: !tagged_iterator { tag: 'monsieurbiz.search.request.product_function_score' }

  monsieurbiz.search.request.product_instant_search:
    class: MonsieurBiz\SyliusSearchPlugin\Search\Request\InstantSearch
    arguments:
      $documentType: monsieurbiz_product
      $queryFilters: !tagged_iterator { tag: 'monsieurbiz.search.request.product_instant_search_filter' }
      $functionScores: !tagged_iterator { tag: 'monsieurbiz.search.request.product_function_score' }

  MonsieurBiz\SyliusSearchPlugin\Search\Request\ProductRequest\Taxon:
    arguments:
      $documentType: monsieurbiz_product
      $queryFilters: !tagged_iterator { tag: 'monsieurbiz.search.request.product_taxon_filter' }
      $postFilters: !tagged_iterator { tag: 'monsieurbiz.search.request.product_post_filter' }
      $sorters: !tagged_iterator { tag: 'monsieurbiz.search.request.product_sorter' }
      $functionScores: !tagged_iterator { tag: 'monsieurbiz.search.request.product_function_score' }

  # Define the filter builders
  MonsieurBiz\SyliusSearchPlugin\Search\ResponseFactory:
    arguments:
      $filterBuilders: !tagged_iterator { tag: 'monsieurbiz.search.response.filter_builder' }

  # Context
  MonsieurBiz\SyliusSearchPlugin\Context\ChannelSimulationContext:
    tags:
      - { name: sylius.context.channel, priority: 128 }

  # Event listeners
  MonsieurBiz\SyliusSearchPlugin\EventListener\ProductEventListener:
    tags:
      - { name: kernel.event_listener, event: sylius.product.post_create, method: dispatchProductReindexMessage }
      - { name: kernel.event_listener, event: sylius.product.post_update, method: dispatchProductReindexMessage }
      - { name: kernel.event_listener, event: sylius.product.pre_delete, method: saveProductIdToDispatchReindexMessage }
      - { name: kernel.event_listener, event: sylius.product.post_delete, method: dispatchDeleteProductReindexMessage }

  MonsieurBiz\SyliusSearchPlugin\EventListener\ProductVariantEventListener:
    tags:
      - { name: kernel.event_listener, event: sylius.product_variant.post_create, method: dispatchProductVariantReindexMessage }
      - { name: kernel.event_listener, event: sylius.product_variant.post_update, method: dispatchProductVariantReindexMessage }
      - { name: kernel.event_listener, event: sylius.product_variant.pre_delete, method: saveProductIdToDispatchReindexMessage }
      - { name: kernel.event_listener, event: sylius.product_variant.post_delete, method: dispatchProductReindexMessage }

  monsieurbiz.search.checker.elasticsearch_checker:
    class: MonsieurBiz\SyliusSearchPlugin\Checker\ElasticsearchChecker
    arguments:
      $config:
        url: '%monsieurbiz_search_elasticsearch_url%'

  MonsieurBiz\SyliusSearchPlugin\Twig\Extension\RenderSearchForm:
    arguments:
      $elasticsearchChecker: '@monsieurbiz.search.checker.elasticsearch_checker'

  MonsieurBiz\SyliusSearchPlugin\Twig\Extension\SearchExtension:
    arguments:
      $elasticsearchChecker: '@monsieurbiz.search.checker.elasticsearch_checker'

  # Routing Context
  MonsieurBiz\SyliusSearchPlugin\Routing\RequestContext:
    decorates: router.request_context
    arguments:
      - '@MonsieurBiz\SyliusSearchPlugin\Routing\RequestContext.inner'
      - '@monsieurbiz.search.checker.elasticsearch_checker'
